const std = @import("std");
const Target = std.build.Target;
const Builder = std.build.Builder;

pub fn build(b: *Builder) !void {

    b.verbose = true;

    const exe = b.addExecutable("wiringPi-zen", "src/main.zen");

    // ビルドモードを設定 //
    // コマンドラインから-Drelease-safe / -Drelease-fast / -Drelease-safeのいずれかを選択できるようになる //
    const mode = b.standardReleaseOptions();
    exe.setBuildMode(mode);

    // ビルドステップにターゲットを設定する //
    const target = try Target.parse("armv7-linux-gnueabihf");
    exe.setTheTarget(target);

    // ビルドステップにパスを設定する //
    const C_HEADER_PATH = "WiringPi/wiringPi/";
    exe.addIncludeDir(C_HEADER_PATH);

    // ビルドステップにC言語の標準関数を  //
    exe.linkSystemLibrary("c");

    // 出力ディレクトリの設定 //
    exe.setOutputDir("./");

    const c_source = [_][]const u8{
        "wiringPi",
        "piHiPri",
        "softTone",
        "softPwm"
    };

    // Wiring Pi ライブラリのコンパイル //
    inline for(c_source) |source| {

        // C言語ソースをビルド対象として追加する
        exe.addCSourceFile(C_HEADER_PATH ++ source ++ ".c", [_][]const u8{});

    }

    // 実行バイナリの生成 //
    exe.install();

    // const run_cmd = exe.run();
    // run_cmd.step.dependOn(b.getInstallStep());

    // const run_step = b.step("run", "Run the app");
    // run_step.dependOn(&run_cmd.step);
}
