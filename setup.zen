const c = @cImport ({
    @cInclude("wiringPi.h");
});

const std = @import("std");

const LED = 0;

pub fn main() anyerror!void {

    const stdout = try std.fs.getStdOut();

    try stdout.write("Raspberry Pi Blink\n");

    wiringPiSetup();
    pinMode(LED, c.OUTPUT);

    while (true) {
        digitalWrite(LED, c.HIGH);
        try stdout.write("Raspberry Pi Blink\n");
        delay(500);

        digitalWrite(LED, c.LOW);
        try stdout.write("Raspberry sonoda Blink\n");
        delay(500);
    }

}

pub fn wiringPiSetup() void {
    _ = c.wiringPiSetup();
}

pub fn pinMode(pin: c_int, mode: c_int) void {
    _ = c.pinMode(pin, mode);
}

pub fn digitalWrite(pin: c_int, value: c_int) void {
    _ = c.pinMode(pin, value);
}

pub fn delay(howLong: c_uint) void {
    _ = c.delay(howLong);
}
