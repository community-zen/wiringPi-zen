const Target = @import("std").build.Target;
const Builder = @import("std").build.Builder;
const std = @import("std");

pub fn build(b: *Builder) !void {
    const mode = b.standardReleaseOptions();

// obj
    // const object_Setup = b.addObject("setup.o", "setup.zen");

    // // ビルドターゲットを設定します。
    // const target = try Target.parse("armv8_5a-linux-gnueabihf");
    // object_Setup.setTheTarget(target);

    // // ビルド成果物を配置するディレクトリを設定します。
    // object_Setup.setOutputDir("./");

    // // システムライブラリをリンクします。
    // object_Setup.linkSystemLibrary("WiringPi/wiringPi");
    // object_Setup.linkSystemLibrary("c");

    // // ビルドモードを設定します。
    // object_Setup.setBuildMode(mode);

    // object_Setup.install();

    // const obj_cmd = object_Setup.run();
    // obj_cmd.step.dependOn(b.getInstallStep());

    // const obj_step = b.step("obj", "Build the Object");
    // obj_step.dependOn(&obj_cmd.step);

    // std.debug.warn("ビルド成功\n");

// exe
    const exe = b.addExecutable("sonoda",null);
    exe.setBuildMode(mode);

    // ビルドターゲットを設定します。
    const target = try Target.parse("armv8_5a-linux-gnueabihf");
    exe.setTheTarget(target);

    // システムライブラリをリンクします。
    exe.addIncludeDir("WiringPi/wiringPi");
    exe.linkSystemLibrary("c");

    exe.addObjectFile("setup.o");
    exe.addObjectFile("wiringPi.o");
    exe.addObjectFile("piHiPri.o");
    exe.addObjectFile("softPwm.o");
    exe.addObjectFile("softTone.o");

    exe.install();

    const run_cmd = exe.run();
    run_cmd.step.dependOn(b.getInstallStep());

    const run_step = b.step("run", "Run the app");
    run_step.dependOn(&run_cmd.step);
}
